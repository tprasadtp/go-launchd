# SPDX-FileCopyrightText: Copyright 2024 Prasad Tengse
# SPDX-License-Identifier: MIT

# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: test
on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go:
          - stable
          - oldstable
        os:
          - macos-11
          - macos-12
          - macos-13
          - macos-14
          - ubuntu-latest
          - windows-latest
        exclude:
          - os: windows-latest
            go: oldstable
          - os: ubuntu-latest
            go: oldstable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Test
        run: task --verbose test
        env:
          DEBUG: ${{ contains(github.event.head_commit.message, '/test-debug-ci') && '1' || '' }}

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.go }}
          path: .gocover
          retention-days: 30

      - name: Coverage View Percent
        # - Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        #   for flag with dot '.' (like test.v) as PowerShell mangles it.
        #   See https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool covdata percent -i .gocover

      - name: Coverage Create Profile
        # Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        # for flag with dot '.' (like test.v) as PowerShell mangles it.
        # See - https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool covdata textfmt -i .gocover -o .gocover/coverage.out

      - name: Coverage View Profile
        # - Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        #   for flag with dot '.' (like test.v) as PowerShell mangles it.
        #   See https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool cover -func .gocover/coverage.out


  # Generate coverage profile from all coverage data.
  coverage:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Download and merge coverage data
        uses: actions/download-artifact@v4
        with:
          path: .gocover
          pattern: coverage-*
          merge-multiple: true

      - name: Coverage View Percent
        # - Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        #   for flag with dot '.' (like test.v) as PowerShell mangles it.
        #   See https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool covdata percent -i .gocover

      - name: Coverage Create Profile
        # Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        # for flag with dot '.' (like test.v) as PowerShell mangles it.
        # See - https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool covdata textfmt -i .gocover -o .gocover/coverage.out

      - name: Coverage View Profile
        # - Do not use '-{flag}={arg}' format if arg contains dot '.', or single dashes '-'
        #   for flag with dot '.' (like test.v) as PowerShell mangles it.
        #   See https://github.com/PowerShell/PowerShell/issues/6291#issuecomment-747104988.
        run: go tool cover -func .gocover/coverage.out
